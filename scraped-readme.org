#+title: Dotfiles
#+options: toc:nil num:nil author:nil date:nil

Idea: Have *ALL* keybindings on the same org file. Then tangle everything to the respective file. No more directory tree and =dotfiles= folder. Let's see what I can do.

* Alacritty
Though I tend to use emacs eshell as terminal, I use Alacritty sometimes when I need a real terminal.

#+begin_src yaml :tangle ~/.config/testing.yml
  window:
    dimensions:
      columns: 80
      lines: 0

    padding:
      x: 10
      y: 20

  scrolling:
    history: 100000
#+end_src

** Fonts 
Let's set the fonts for the Terminal and size 
#+begin_src yaml :tangle ~/.config/testing.yml
  # Font configuration
  font:
    normal:
      family: Inconsolata Nerd Font
      style: Regular
    bold:
      family: Inconsolata Nerd Font
      style: bold
    italic:
      family: Inconsolata Nerd Font
      style: italic
    bold_italic:
      family: Inconsolata Nerd Font
      style: bold_italic

    size: 11
#+end_src

- Offset: The padding between the content and the border of the window
- Glyph offset: The padding between characters
#+begin_src yaml :tangle ~/.config/testing.yml
    offset:
      x: 0
      y: 2

    glyph_offset:
      x: 0
      y: 0

  draw_bold_text_with_bright_colors: true
#+end_src

** Colorschemes
Here's the colorschemes I use. Though I used to have a lot, now I only keep a light one and a dark one. =colors= set the solorscheme to use.
#+begin_src yaml :tangle ~/.config/testing.yml
  schemes:
    one-light: &one-light
      primary:
        background: '#fafafa'
        foreground: '#383a42'
      cursor:
        text:       CellBackground
        cursor:     '#526eff' # syntax-cursor-color
      selection:
        text:       CellForeground
        background: '#e5e5e6' # syntax-selection-color
      normal:
        black:      '#fafafa' # mono-2
        red:        '#e45649' # red 1
        green:      '#50a14f'
        yellow:     '#c18401' # orange 2
        blue:       '#4078f2'
        magenta:    '#a626a4'
        cyan:       '#0184bc'
        white:      '#a0a1a7' # mono-3

    one-dark: &one-dark
      primary:
        background: '0x282c34'
        foreground: '0xabb2bf'
      cursor:
        text:       CellBackground
        cursor:     '#526eff' # syntax-cursor-color
        # Normal colors
      normal:
        black:   '0x5c6370'
        red:     '0xe06c75'
        green:   '0x98c379'
        yellow:  '0xe5c07b'
        blue:    '0x61afef'
        magenta: '0xc678dd'
        cyan:    '0x56b6c2'
        white:   '0xabb2bf'
    
      # Bright colors
      bright:
        black:   '0x4b5263'
        red:     '0xbe5046'
        green:   '0x98c379'
        yellow:  '0xd19a66'
        blue:    '#526eff'
        magenta: '0xc678dd'
        cyan:    '0x56b6c2'
        white:   '0xabb2bf'

  colors: *one-light
  # Background opacity
  background_opacity: 1
#+end_src

** Misc
The cursor style and other stuff
#+begin_src yaml :tangle ~/.config/testing.yml
  cursor:
    # Cursor style
    #
    # Values for `style`:
    #   - ▇ Block
    #   - _ Underline
    #   - | Beam
    style: Block
    unfocused_hollow: true

  live_config_reload: true

  mouse:
    #double_click: { threshold: 300 }
    #triple_click: { threshold: 300 }

    hide_when_typing: true

    url:
      launcher:
        program: firefox
      #  args: []
      #modifiers: None
#+end_src

** Keybindings
The keybidnings to use inside Alacritty.
#+begin_src yaml :tangle ~/.config/testing.yml
  key_bindings:
    # (Windows, Linux, and BSD only)
    - {key: V, mods: Control|Shift, action: Paste}
    - {key: C, mods: Control|Shift, action: Copy}
    - {key: Key0, mods: Control, action: ResetFontSize}
    - {key: Plus, mods: Control, action: IncreaseFontSize}
    - {key: Minus, mods: Control, action: DecreaseFontSize}
    - {key: K, mods: Control|Shift, action: ScrollLineUp, mode: ~Alt}
    - {key: J, mods: Control|Shift, action: ScrollLineDown, mode: ~Alt}
    - {key: U, mods: Control|Alt, action: ScrollPageUp, mode: ~Alt}
    - {key: D, mods: Control|Shift, action: ScrollPageDown, mode: ~Alt}
    - {key: Return, mods: Control, action: SpawnNewInstance}
#+end_src
* bspwm
In the past I used ~bspwm~, here's the config file. It's old and maybe some options aren't available anymore.
*DON'T FORGET TO MAKE IT EXECUTABLE*
** Loading programs
Load ~sxhkd~ and ~polybar~. Theoretically, you can add more programs here, but can be problematic when reloading. A better approach it's to use ~.xinitrc~
#+begin_src sh :tangle ~/.config/bspwm/bspwmrc
  #! /bin/sh
  sxhkd -c ~/.config/sxhkd/sxhkdrc &
  ~/.config/polybar/polybar-monitors.sh &

  #. "${HOME}/.cache/wal/colors.sh"
  #. "${HOME}/.Xresources"
#+end_src

** Monitors
~bspwm~ uses different workspaces for every monitor. You need to configure it here.
#+begin_src sh :tangle ~/.config/bspwm/bspwmrc
  bspc monitor LVDS-1 -d 1 2 3 4
  bspc monitor VGA-1 -d 5 6 7
  bspc monitor HDMI-1 -d 5 6 7
  bspc config remove_unplugged_monitors true 
  bspc config remove_disabled_monitors true
  #+end_src
  
** Layout and colors 
First, the layout. ~initial_polarity~ it's to set where the new clients should appear.
#+begin_src sh :tangle ~/.config/bspwm/bspwmrc
  bspc config automatic_scheme spiral
  bspc config initial_polarity first_child
  bspc config removal_adjustment true
  
  bspc config border_width        2
  bspc config window_gap           10
  bspc config split_ratio          0.5
  bspc config borderless_monocle   true
  bspc config gapless_monocle      true

  bspc config normal_border_color "#282828"
  bspc config active_border_color "#282828"
  bspc config focused_border_color "#fbf2c7"
  bspc config presel_feedback_color "#fbf2c7"
  #+end_src
 
* dunst
~dunst~ it's a notification service for X11. It depends on ~dbus~.

#+begin_src conf :tangle ~/.config/dusnt/dunstrc
  [colors]
      background	= "#2940B6"
      foreground 	= "#CACACC"
      frame_color = "#CACACC"
  # horizon
  #    background	= "#1c1e27"
  #    foreground 	= "#cacacc"
  #    frame_color = "#282828"
  ## gruvbox
     # background	= "#282828"
     # foreground 	= "#fbf2c7"
     # frame_color = "#282828"
  # dracula
  #   background	= "#282a36"
  #    foreground = "#f8f8f2"
  #    frame_color = "#282a36"

  [global]
     frame_width = 1
      font = Futura BK Bt 11
      follow = none
    
      # Allow a small subset of html markup:
      #   <b>bold</b>
      #   <i>italic</i>
      #   <s>strikethrough</s>
      #   <u>underline</u>
      # 
      # For a complete reference see
      # <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
      # If markup is not allowed, those tags will be stripped out of the
      # message.
      markup = yes
    
      # The format of the message.  Possible variables are:
      #   %a  appname
      #   %s  summary
      #   %b  body
      #   %i  iconname (including its path)
      #   %I  iconname (without its path)
      #   %p  progress value if set ([  0%] to [100%]) or nothing
      # Markup is allowed
      format = "<b>%a</b> \n %s %p\n%b"
    
      # Sort messages by urgency.
      sort = yes
    
      # Show how many messages are currently hidden (because of geometry).
      indicate_hidden = yes
      alignment = left
      bounce_freq = 0

      # Show age of message if message is older than show_age_threshold
      # seconds.
      # Set to -1 to disable.
      show_age_threshold = 60
      word_wrap = yes
      ignore_newline = no
    
    
      #   [{width}]x{height}[+/-{x}+/-{y}]
      geometry = "450x4-10+35"
    
      # Shrink window if it's smaller than the width.  
      shrink = yes
      transparency = 0
    
      # Don't remove messages, if the user is idle (no mouse or keyboard input)
      # for longer than idle_threshold seconds.
      # Set to 0 to disable.
      # default 120
      idle_threshold = 120 
    
      # Which monitor should the notifications be displayed on.
      monitor = 0
    
      # Should a notification popped up from history be sticky or timeout
      # as if it would normally do.
      sticky_history = yes
    
      # Maximum amount of notifications kept in history
      history_length = 20
    
      # Display indicators for URLs (U) and actions (A).
      show_indicators = yes
    
      # The height of a single line.  If the height is smaller than the
      # font height, it will get raised to the font height.
      # This adds empty space above and under the text.
      line_height = 0
    
      # Draw a line of "separator_height" pixel height between two
      # notifications.
      # Set to 0 to disable.
      separator_height = 1
    
      # Padding between text and separator.
      padding = 2
    
      # Horizontal padding.
      horizontal_padding = 3
    
      # Define a color for the separator.
      # possible values are:
      #  * auto: dunst tries to find a color fitting to the background;
      #  * foreground: use the same color as the foreground;
      #  * frame: use the same color as the frame;
      #  * anything else will be interpreted as a X color.
      separator_color = auto
    
      # Print a notification on startup.
      # This is mainly for error detection, since dbus (re-)starts dunst
      # automatically after a crash.
      startup_notification = false
    
      # dmenu path.
      dmenu = /usr/bin/dmenu -p dunst:
    
      # Browser for opening urls in context menu.
      browser = firefox

      # Align icons left/right/off
      icon_position = left

      # Paths to default icons.
      icon_path = /usr/share/icons/Adwaita/16x16/status/:/usr/share/icons/Adwaita/16x16/devices/:/usr/share/icons/Papirus-Dark/16x16/devices/:/usr/share/icons/Papirus-Dark/16x16/status/

      # Limit icons size.
      max_icon_size=128

  [shortcuts]

      close_all = ctrl+mod1+space

      # Redisplay last message(s).
       history = shift+mod1+h 
      context = shift+mod4+space

  [urgency_low]
      # IMPORTANT: colors have to be defined in quotation marks.
      # Otherwise the "#" and following would be interpreted as a comment.
      background = "#313D4A"
      foreground = "#F9FAF9"
      frame_color = "#9DB788"
      timeout = 5 

  [urgency_normal]
      background = "#313D4A"
      foreground = "#F9FAF9"
      frame_color = "#2E2E2D"
      timeout = 5

  [urgency_critical]
      background = "#313D4A"
      foreground = "#F9FAF9"
      frame_color = "#D62929"
      timeout = 0


  [Spotify]
          appname = Spotify
          frame_color = "#30AB70"
          timeout = 5

  # vim: ft=cfg
#+end_src
* herbstluftwm
A manual tiling window manager that uses the concept of "frames". You can divide the scren on "frames" and put windows iside those frames.
*DON'T FORGET TO MAKE THE FILE EXECUTABLE*

#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  #!/usr/bin/env bash
  hc() {
      herbstclient "$@"
  }
  hc emit_hook reload
#+end_src

** Keybindings
Here's some keybindings exclusive for HLWM, and managed by the WM itself.
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  # remove all existing keybindings
  hc keyunbind --all
  Mod=Mod4   # Use the super key as the main modifier

  hc keybind $Mod-Control-r reload
  hc keybind $Mod-Control-q remove #remove frame, merge client with the next frame
  hc keybind $Mod-Shift-q close_or_remove #Close windows, remove empty frames
#+end_src

*** Movement
How move around windows and frames. Maximize needs an external script.
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  # basic movement in tiling and floating mode
  hc keybind $Mod-Control-m spawn ~/.config/herbstluftwm/maximize.sh
  hc keybind $Mod-z spawn ~/.config/herbstluftwm/scratchpad.sh
#+end_src

Focusing clients and frames
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  # focusing clients inside the container
  hc keybind $Mod-h  focus left
  hc keybind $Mod-j  focus down
  hc keybind $Mod-k  focus up
  hc keybind $Mod-l  focus right

  # Focusing containers on the direction
  hc keybind $Mod-Mod1-h  focus -e left
  hc keybind $Mod-Mod1-j  focus -e down
  hc keybind $Mod-Mod1-k  focus -e up
  hc keybind $Mod-Mod1-l  focus -e right

  #+end_src
Moving clients (you can't move frames sadly)
  #+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  # moving clients in tiling and floating mode
  hc keybind $Mod-Shift-h shift left
  hc keybind $Mod-Shift-j shift down
  hc keybind $Mod-Shift-k shift up
  hc keybind $Mod-Shift-l shift right

  # move client TO OTHER FRAME
  hc keybind $Mod-Mod1-Shift-h shift -e left
  hc keybind $Mod-Mod1-Shift-j shift -e down
  hc keybind $Mod-Mod1-Shift-k shift -e up
  hc keybind $Mod-Mod1-Shift-l shift -e right
#+end_src

*** Frames
You can create new frames to put windows inside. To achieve this, you can divide the focused frames by half.
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  # Split by half from the longest side
  hc keybind $Mod-Control-space split explode 
  
  # Split and focus, ready to work
  hc keybind $Mod-i  chain , split bottom  0.5 , focus -e down 
  hc keybind $Mod-o  chain , split right   0.5 , focus -e right
  hc keybind $Mod-Control-i  chain , split top  0.5 , focus -e up
  hc keybind $Mod-Control-o  chain , split left   0.5 , focus -e left

  # Split but no focus, ready to not work yet
  hc keybind $Mod-Mod1-i       split   bottom  0.5
  hc keybind $Mod-Mod1-o       split   right   0.5

  # resizing frames and floating clients
  # grow
  resizestep=0.02
  hc keybind $Mod-Mod1-Control-h resize left +$resizestep
  hc keybind $Mod-Mod1-Control-l resize right +$resizestep
  hc keybind $Mod-Mod1-Control-j resize down +$resizestep
  hc keybind $Mod-Mod1-Control-k resize up +$resizestep

  #shrink
  hc keybind $Mod-Shift-Control-h resize left -$resizestep
  hc keybind $Mod-Shift-Control-l resize right -$resizestep
  hc keybind $Mod-Shift-Control-j resize down -$resizestep
  hc keybind $Mod-Shift-Control-k resize up -$resizestep
#+end_src

*** Tags
They should rename it to worskpaces. They act as normal workspace instead of the cool tags of dwm. But, you can customize it's behaviour in a very cool ways. I use the default behaviour (one tag set for all the desktops, ~xmonad~ like) but if you want to have specific tags for every monitor (~bspwm~ like) or separate tag sets for every monitor (~dwm~ like) you can do it. Check [[https://herbstluftwm.org/faq.html#_q_how_can_i_have_some_of_the_tags_on_specific_monitors_only][here]].
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  # tags
  tag_names=( {1..6} )
  tag_keys=( {1..6} 0 )

  hc rename default "${tag_names[0]}" || true
  for i in "${!tag_names[@]}" ; do
      hc add "${tag_names[$i]}"
      key="${tag_keys[$i]}"
      if ! [ -z "$key" ] ; then
          hc keybind "$Mod-$key" use_index "$i" #focus tag with super+#n
          hc keybind "$Mod-Shift-$key" move_index "$i" #move to tag with super+shift+#n
      fi
  done

  # cycle through tags
  hc keybind $Mod-Control-l use_index +1 --skip-visible #next tag
  hc keybind $Mod-Control-h use_index -1 --skip-visible #prev tag
#+end_src

*** Layouts
HLWM it's a manual tiler, but every frame can have a different layout. The included layouts are:
- Vertical
- Horizontal
- Max: Monocle, inside the frame
- Grid
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  hc keybind $Mod-F11 fullscreen toggle
  hc keybind $Mod-s set_attr clients.focus.floating toggle #float focused client
  hc keybind $Mod-p pseudotile toggle 
  hc keybind $Mod-m cycle_layout +1 max vertical #monocle, but inside the frame
  hc keybind $Mod-r rotate

  hc keybind $Mod-t cycle_layout +1 vertical horizontal #change direction of clients
  hc keybind $Mod-g set_layout grid #change direction of clients
  
  # focus monitors
  hc keybind $Mod-comma   cycle_monitor +1
  hc keybind $Mod-period  cycle_monitor -1

  hc keybind $Mod-Tab         cycle_all +1
  hc keybind $Mod-Shift-Tab   cycle_all -1
#+end_src

*** Mouse keybindings
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  # mouse
  hc mouseunbind --all
  hc mousebind $Mod-Button1 move
  hc mousebind $Mod-Button2 zoom
  hc mousebind $Mod-Button3 resize
#+end_src

** Configuration
HLWM has a very interesting and large range of options to set borders colors and things like that. You can have double borders and change borders.
*** Frames
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  hc attr theme.tiling.reset 1
  hc attr theme.floating.reset 1

  hc set frame_border_active_color '#61AFEF' #Focused frame color
  hc set frame_border_normal_color '#14161A' #Unfocused frame color
  hc set frame_border_width 3  #border size

  hc set frame_bg_active_color '#282C34' #Filler of focused frame
  hc set frame_bg_normal_color '#282C34' #Filler of unfocused frame (needs always show frame)
  hc set frame_bg_transparent on #Removes the filler color of frame
  hc set frame_transparent_width 0 # What part of the filler color should remain?

  hc set frame_active_opacity 255 #Focused frame opacity
  hc set frame_normal_opacity 255 # Unfocused frame opacity

  hc set frame_border_inner_width 3
  hc set frame_border_inner_color '#526eff'
  hc set always_show_frame on
  hc set frame_gap 4
  hc set default_frame_layout 2 #should use max layout as default
#+end_src

*** Windows
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  hc attr theme.padding_top 0 #Padding at the top of the windows
  hc attr theme.padding_right 0 #Padding 
  hc attr theme.padding_left 0 #Padding 
  hc attr theme.padding_bottom 0 #Padding 

  hc attr theme.border_width 3 # Windows borders
  hc attr theme.active.color '#61AFEF' #Window border color
  hc attr theme.normal.color '#4B5263' # Window border color unfocused
  hc attr theme.urgent.color orange

  # Color for the inner frame
  hc attr theme.inner_width 0
  hc attr theme.normal.inner_width 0
  hc attr theme.active.inner_color '#61AFEF'
  hc attr theme.normal.inner_color '#61AFEF'

  # Color for the outer frame (3 borders,too much)
  hc attr theme.outer_width 0
  hc attr theme.active.outer_color '#61AFEF'
  hc attr theme.normal.outer_color '#61AFEF'

  # Colors for floating 
  hc attr theme.floating.active.color '#61AFEF'
  hc attr theme.floating.normal.color '#4B5263'
  hc attr theme.floating.border_width 3
  hc attr theme.background_color '#61AFEF'

  hc set window_gap 0 #Gap between windows
  hc set frame_padding 0 # Gapp between windows and frames
  hc set smart_window_surroundings on #removes gaps and borders with 1 window. Change attr minimal 
  hc set smart_frame_surroundings on #removes gaps and borders with 1 frame.
  hc set mouse_recenter_gap 0
  hc set hide_covered_windows on
#+end_src

** Rules
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  hc unrule -F
  hc rule focus=on # normally focus new clients
  hc rule floatplacement=center
  hc rule class=mpv floating=on
  hc rule class=Lxappareance floating=on
  hc rule class=Pavucontrol floating=on
  hc rule class=qt5ct floating=on
  hc rule class=Sxiv floating=on
  hc rule class=kruler floating=on
  hc rule class=zoom floating=on
  hc rule class=Connman-gtk floating=on
  hc rule instance=calendar.txt floating=on

  hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
  hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
  hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
#+end_src
** Misc and polybar
#+begin_src sh :tangle ~/.config/herbstluftwm/autostart
  hc set tree_style '╾│ ├└╼─┐'

  # unlock, just to be sure
  hc unlock

  # do multi monitor setup here, e.g.:
  # hc set_monitors 1280x1024+0+0 1280x1024+1280+0
  # or simply:
  hc detect_monitors

  # Load polybar
  ~/.config/polybar/polybar_launch.sh
#+end_src
* lf

