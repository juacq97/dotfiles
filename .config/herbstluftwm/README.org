#+title:Herbstluftwm configuration file

This is my herbstluftwm configuration. HLWM became my principal window manager after I tried =sway= and I wanted more control over my windows. =dwm= is fine, but I don't like how it moves all the windows every time I open a new one HLWM solves this thanks to /frames/, or containers, rectangles that can put windows inside. When you closes a window the rest of the screen remains untouched, because all the action happens inside the frame. Of course, in herbstluftwm you need to explicitely tell where you want the next frame since it doesn't do it for you, that can be a lot of work for some people who want their windows arranged automagically, but if you want more control over your windows, try HLWM.

Herbstluftwm is configured thought a client /รก la/ =bspwm=, so you can change settings on the fly from a terminal, and the config file is just a shell script.

* Aliasing
First of all, lets start the script and create an alias so you don't need to type =herbstclient= every line
#+begin_src sh
#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}
hc emit_hook reload
#+end_src

* Keybindings

Here the keybindings are defined. All the window-related keybindings are here. Keybindings to launch apps are managed by =sxhkd=.

M = Mod key (the super key)
C = Control key
A = Mod1 key (the alt key)
S = Shift key

** Basics
| Keybinding | Action                      | Notes                                              |
|------------+-----------------------------+----------------------------------------------------|
| M-C-r      | Reload the WM               |                                                    |
| M-S-q      | Close the window or frame   | The frame needs to be empty                        |

#+begin_src sh
  hc keyunbind --all
  Mod=Mod4

  hc keybind $Mod-Control-r reload
  hc keybind $Mod-Shift-q close_or_remove
#+end_src

** Clients movement
This refers to the windows created by applications.

| Keybinding | Action                      | Notes                                              |
|------------+-----------------------------+----------------------------------------------------|
| M-C-m      | Maximize a window (monocle) |                                                    |
| M-z        | Creates a scratchpad        | It creates a new workspace and can be very anoying |
| M-h        | Focus window to the left    |                                                    |
| M-j        | Focus window down           |                                                    |
| M-k        | Focus window up             |                                                    |
| M-l        | Focus window to the right   |                                                    |
| M-S-h      | Move window to the left     |                                                    |
| M-S-j      | Move window down            |                                                    |
| M-S-k      | Move window up              |                                                    |
| M-S-l      | Move window to the right    |                                                    |

#+begin_src sh
  hc keybind $Mod-Control-m spawn ~/.config/herbstluftwm/maximize.sh
  hc keybind $Mod-z spawn ~/.config/herbstluftwm/scratchpad.sh

  # Focus clients
  hc keybind $Mod-h  focus left
  hc keybind $Mod-j  focus down
  hc keybind $Mod-k  focus up
  hc keybind $Mod-l  focus right

  # moving clients in tiling and floating mode
  hc keybind $Mod-Shift-h shift left
  hc keybind $Mod-Shift-j shift down
  hc keybind $Mod-Shift-k shift up
  hc keybind $Mod-Shift-l shift right
#+end_src

** Frames focusing
This is about containers. By default there's one big container

| Keybinding | Action                                                               | Notes |
|------------+----------------------------------------------------------------------+-------|
| M-A-h      | Focus container to the left                                          |       |
| M-A-j      | Focus container down                                                 |       |
| M-A-k      | Focus container up                                                   |       |
| M-A-l      | Focus container to the right                                         |       |
| M-A-S-h    | Move client to the container to the left                             |       |
| M-A-S-j    | Move client to the container down                                    |       |
| M-A-S-k    | Move client to the container up                                      |       |
| M-A-S-l    | Move client to the container to the right                            |       |
| M-i        | Split the focused container horizontally and focus the created frame |       |
| M-o        | Split the focused container vertically and focus the created frame   |       |
| M-C-i      | Split the focused container horizontally and focus the upper frame   |       |
| M-C-o      | Split the focused container vertically and focus the below frame     |       |
| M-C-v      | Slit vertically, don't focus                                         |       |
| M-C-h      | Slit horizontally, don't focus                                       |       |
| M-SPC      | Split by the longest side                                            |       |

#+begin_src sh
  # Focusing containers on the direction
  hc keybind $Mod-Mod1-h  focus -e left
  hc keybind $Mod-Mod1-j  focus -e down
  hc keybind $Mod-Mod1-k  focus -e up
  hc keybind $Mod-Mod1-l  focus -e right

  # move client TO OTHER FRAME
  hc keybind $Mod-Mod1-Shift-h shift -e left
  hc keybind $Mod-Mod1-Shift-j shift -e down
  hc keybind $Mod-Mod1-Shift-k shift -e up
  hc keybind $Mod-Mod1-Shift-l shift -e right

  # splitting frames
  hc keybind $Mod-i  chain , split bottom  0.5 , focus -e down 
  hc keybind $Mod-o  chain , split right   0.5 , focus -e right
  hc keybind $Mod-Control-i  chain , split top  0.5 , focus -e up
  hc keybind $Mod-Control-o  chain , split left   0.5 , focus -e left

  # Split but no focus, ready to not work yet
  hc keybind $Mod-Control-v       split   bottom  0.5
  hc keybind $Mod-Control-b       split   right   0.5

  # Split by half from the longest side
  hc keybind $Mod-Control-space split explode 

#+end_src

#+begin_src sh
  # resizing frames and floating clients
  resizestep=0.02
  hc keybind $Mod-Mod1-Control-h resize left +$resizestep
  hc keybind $Mod-Mod1-Control-l resize right +$resizestep
  hc keybind $Mod-Mod1-Control-j resize down +$resizestep
  hc keybind $Mod-Mod1-Control-k resize up +$resizestep

  hc keybind $Mod-Shift-Control-h resize left -$resizestep
  hc keybind $Mod-Shift-Control-l resize right -$resizestep
  hc keybind $Mod-Shift-Control-j resize down -$resizestep
  hc keybind $Mod-Shift-Control-k resize up -$resizestep


  # tags

  hc set default_frame_layout 2

  tag_names=( {1..6} )
  tag_keys=( {1..6} 0 )

  hc rename default "${tag_names[0]}" || true
  for i in "${!tag_names[@]}" ; do
      hc add "${tag_names[$i]}"
      key="${tag_keys[$i]}"
      if ! [ -z "$key" ] ; then
          hc keybind "$Mod-$key" use_index "$i"
          hc keybind "$Mod-Shift-$key" move_index "$i"
      fi
  done

  # cycle through tags
  hc keybind $Mod-Control-l use_index +1 --skip-visible #next tag
  hc keybind $Mod-Control-h use_index -1 --skip-visible #prev tag

  hc keybind $Mod-Control-j cycle +1
  hc keybind $Mod-Control-k cycle -1

  # layouting
  hc keybind $Mod-Control-q remove #remove frame, merge client with the next frame
  hc keybind $Mod-F11 fullscreen toggle
  hc keybind $Mod-s set_attr clients.focus.floating toggle #float focused client
  #hc keybind $Mod-p pseudotile toggle 
  hc keybind $Mod-m cycle_layout +1 max vertical #monocle, but inside the frame
  hc keybind $Mod-r rotate

  hc keybind $Mod-t cycle_layout +1 horizontal vertical #change direction of clients
  hc keybind $Mod-g set_layout grid #change direction of clients


  # mouse
  hc mouseunbind --all
  hc mousebind $Mod-Button1 move
  hc mousebind $Mod-Button2 zoom
  hc mousebind $Mod-Button3 resize

  # focus
  hc keybind $Mod-comma   cycle_monitor +1
  hc keybind $Mod-period  cycle_monitor -1

  hc keybind $Mod-Tab         cycle_all +1
  hc keybind $Mod-Shift-Tab   cycle_all -1


  # theme

  back=$(xrdb -query | grep background | cut -f2- -d'#')
  border=$(xrdb -query | grep cursorColor | cut -f2- -d'#')
  color0=$(xrdb -query | grep color0 | cut -f2- -d'#')
  color1=$(xrdb -query | grep color1: | cut -f2- -d'#')
  color2=$(xrdb -query | grep color2 | cut -f2- -d'#')
  color3=$(xrdb -query | grep color3 | cut -f2- -d'#')
  color4=$(xrdb -query | grep color4 | cut -f2- -d'#')
  color5=$(xrdb -query | grep color5 | cut -f2- -d'#')
  color6=$(xrdb -query | grep color6 | cut -f2- -d'#')
  color7=$(xrdb -query | grep color7 | cut -f2- -d'#')

  hc attr theme.tiling.reset 1
  hc attr theme.floating.reset 1

  # Frames
  hc set frame_border_active_color "#$color5" #Focused frame color
  hc set frame_border_normal_color "#$back" #Unfocused frame color
  hc set frame_border_width 3  #border size

  hc set frame_bg_active_color "#$color5" #Fill of focused frame
  hc set frame_bg_normal_color "#$back" #Fill of unfocused frame (needs always show frame)
  hc set frame_bg_transparent on #Removes the filler color of frame
  hc set frame_transparent_width 0 # What part of the filler color should remain?

  hc set frame_active_opacity 100 #Focused frame opacity
  hc set frame_normal_opacity 100 # Unfocused frame opacity

  hc set frame_border_inner_width 2
  hc set always_show_frame on
  hc set frame_gap 4

  # Clients
  hc attr theme.padding_top 0 #Padding at the top of the windows
  hc attr theme.padding_right 0 #Padding 
  hc attr theme.padding_left 0 #Padding 
  hc attr theme.padding_bottom 0 #Padding 

  hc attr theme.border_width 6 # WIndows border  s
  hc attr theme.active.color "#$back" #Window border color
  hc attr theme.normal.color "#$back" # Window border color unfocused
  hc attr theme.urgent.color orange

  # Color for the inner frame
  hc attr theme.inner_width 2
  hc attr theme.normal.inner_width 0
  hc attr theme.active.inner_color "#$color5"
  hc attr theme.normal.inner_color "#4b5263"

  # Color for the outer frame (3 color4s,too much)
  hc attr theme.outer_width 0
  hc attr theme.active.outer_color "#$color5"
  hc attr theme.normal.outer_color "#$color5"

  # Colors for floating 
  hc attr theme.floating.active.color "#$back"
  hc attr theme.floating.normal.color "#$back"
  hc attr theme.floating.border.width 6
  hc attr theme.background_color "#$back"

  # Color for the inner frame
  hc attr theme.floating.inner_width 2
  hc attr theme.floating.active.inner_color "#$color5"
  hc attr theme.floating.normal.inner_color "#$back"


  hc set window_gap 2 #Gap between windows
  hc set frame_padding 0 # Gapp between windows and frames
  hc set smart_window_surroundings off
  hc set smart_frame_surroundings on
  hc set mouse_recenter_gap 0
  hc set hide_covered_windows on

  # rules
  hc unrule -F
  #hc rule class=XTerm tag=3 # move all xterms to tag 3
  hc rule focus=on # normally focus new clients
  hc rule floatplacement=center
  hc rule class=mpv floating=on
  hc rule class=Lxappareance floating=on
  hc rule class=Pavucontrol floating=on
  hc rule class=qt5ct floating=on
  hc rule class=Sxiv floating=on
  hc rule class=kruler floating=on
  hc rule class=zoom floating=on
  hc rule class=Connman-gtk floating=on
  hc rule instance=calendar.txt floating=on
  hc rule windowtype~'_NET_WM_WINDOW_TYPE_DESKTOP' manage=off

  hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
  hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
  hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

  hc set tree_style 'โพโ โโโผโโ'

  # unlock, just to be sure
  hc unlock

  # do multi monitor setup here, e.g.:
  # hc set_monitors 1280x1024+0+0 1280x1024+1280+0
  # or simply:
  hc detect_monitors

  # find the panel
  ~/.config/polybar/polybar_launch.sh
#+end_src
